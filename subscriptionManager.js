// Subscription management functionality\nexport function addSubscriptionControls() {\n    ensureSingleControlPanel();\n    console.log('[DEBUG] Adding subscription controls');\n    \n    const controlPanel = document.createElement('div');\n    controlPanel.className = 'wl-control-panel';\n    \n    const selectAllBtn = document.createElement('button');\n    selectAllBtn.textContent = 'Select All Channels';\n    selectAllBtn.className = 'wl-btn select-all';\n    \n    const unsubscribeBtn = document.createElement('button');\n    unsubscribeBtn.textContent = 'Unsubscribe Selected';\n    unsubscribeBtn.className = 'wl-btn delete-selected';\n    \n    selectAllBtn.addEventListener('click', () => {\n        const checkboxes = document.querySelectorAll('.subscription-checkbox');\n        const allChecked = Array.from(checkboxes).every(cb => cb.checked);\n        checkboxes.forEach(cb => cb.checked = !allChecked);\n        selectAllBtn.textContent = allChecked ? 'Select All Channels' : 'Deselect All';\n    });\n\n    unsubscribeBtn.addEventListener('click', async () => {\n        const selectedChannels = document.querySelectorAll('.subscription-checkbox:checked');\n        console.log('[DEBUG] Selected channels:', selectedChannels.length);\n        \n        if (selectedChannels.length === 0) return;\n\n        if (confirm(`Unsubscribe from ${selectedChannels.length} channels?`)) {\n            let successCount = 0;\n\n            for (const checkbox of selectedChannels) {\n                try {\n                    const channelItem = checkbox.closest('ytd-channel-renderer');\n                    const channelName = channelItem?.querySelector('.ytd-channel-name')?.textContent;\n                    console.log('[DEBUG] Processing channel:', channelName);\n                    \n                    const subscribeButton = channelItem.querySelector('ytd-subscribe-button-renderer button');\n                    if (subscribeButton) {\n                        subscribeButton.click();\n                        await new Promise(r => setTimeout(r, 1500));\n                        \n                        const unsubscribeButton = document.querySelector('button.yt-spec-button-shape-next--call-to-action[aria-label=\"Se dÃ©sabonner\"]');\n                        console.log('[DEBUG] Found unsubscribe button:', unsubscribeButton);\n                        \n                        if (unsubscribeButton) {\n                            unsubscribeButton.click();\n                            successCount++;\n                            await new Promise(r => setTimeout(r, 2000));\n                        } else {\n                            console.log('[DEBUG] Unsubscribe button not found in dialog');\n                        }\n                    } else {\n                        console.log('[DEBUG] Subscribe button not found for channel');\n                    }\n                } catch (error) {\n                    console.error('[DEBUG] Error processing channel:', error);\n                }\n            }\n\n            console.log(`[DEBUG] Successfully unsubscribed from ${successCount} channels`);\n            \n            if (successCount > 0) {\n                alert(`Successfully unsubscribed from ${successCount} channels. Page will refresh.`);\n                window.location.reload();\n            } else {\n                alert('No channels were unsubscribed. Please try again.');\n            }\n        }\n    });\n    \n    controlPanel.appendChild(selectAllBtn);\n    controlPanel.appendChild(unsubscribeBtn);\n\n    const targetElement = document.querySelector('#primary');\n    if (targetElement) {\n        targetElement.insertBefore(controlPanel, targetElement.firstChild);\n    }\n\n    function addCheckboxesToChannels() {\n        const channelItems = document.querySelectorAll('ytd-channel-renderer');\n        channelItems.forEach(item => {\n            if (!item.querySelector('.subscription-checkbox')) {\n                const checkbox = document.createElement('input');\n                checkbox.type = 'checkbox';\n                checkbox.className = 'subscription-checkbox';\n                \n                // Find the img element inside yt-img-shadow\n                const avatarImg = item.querySelector('yt-img-shadow img');\n                if (avatarImg) {\n                    // Get the yt-img-shadow container\n                    const avatarContainer = avatarImg.closest('yt-img-shadow');\n                    if (avatarContainer && avatarContainer.parentElement) {\n                        // Insert checkbox before the avatar\n                        avatarContainer.parentElement.insertBefore(checkbox, avatarContainer);\n                    }\n                }\n            }\n        });\n    }\n\n    const observer = new MutationObserver(() => {\n        addCheckboxesToChannels();\n    });\n\n    const container = document.querySelector('#content');\n    if (container) {\n        observer.observe(container, {\n            childList: true,\n            subtree: true\n        });\n        addCheckboxesToChannels();\n    }\n}